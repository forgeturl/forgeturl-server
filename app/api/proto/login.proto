syntax = "proto3";

option go_package = "api/login";

import "google/api/annotations.proto";
import "google/api/client.proto";

service LoginService {
//  rpc Login(LoginReq) returns (LoginResp) ;
//
//  rpc Register(RegisterReq) returns (RegisterResp);

  // 连接器登录，跳转鉴权的url
  // https://github.com/googleapis/googleapis/blob/master/google/api/http.proto
//  rpc Connector(ConnectorReq) returns (ConnectorResp) {
//    option (google.api.http) = {
//      get: "/login/connector/auth/{provider}"
//    };
//  };
//
//  // 第三方登录回调
//  rpc ConnectorCallback(ConnectorCallbackReq) returns (ConnectorCallbackResp) {
//    option (google.api.http) = {
//      get: "/login/connector/callback/{provider}"
//    };
//  };

  rpc Logout(LogoutReq) returns (LogoutResp) {
    option (google.api.http) = {
      post: "/login/logout"
      body: "*"
    };
  };

}

message LoginReq {
  // 用户名
  string username = 1;
  // 前端加密后传给后端，不保存原文密码
  string password = 2;
}

message LoginResp {
  // 成功则返回token，并且完成cookie的设置（记得要做cookie的弹窗功能）
  string token = 1;
}

message RegisterReq {
  string username = 1;
  string password = 2;
  string email = 3;
}

message RegisterResp {
  string token = 1;
}

message ConnectorReq {
  // 连接器名称：如weixin、google
  string provider = 2;
  // 连接器的入参
  string code = 1;
}

message ConnectorResp {
  // 跳转鉴权的地址
  string auth_url = 1;
}

message ConnectorCallbackReq {
  // 连接器名称：如weixin、google
  string provider = 2;
}

message ConnectorCallbackResp {
    // 用户id
    int64 uid = 1;
    // 展示名称
    string display_name = 2;
    // 用户名
    string username = 3;
    // 用户头像
    string avatar = 4;
    // 用户邮箱
    string email = 5;
}

message LogoutReq {
}

message LogoutResp {
}