syntax = "proto3";

option go_package = "api/space";

import "google/api/annotations.proto";
import "google/api/client.proto";

service SpaceService {
  // 拉取我的空间 || 空间
  // 登录状态才能拉到自己的空间
  // 部分页面如果消失或者没权限了，需要自动移除
  rpc GetMySpace(GetMySpaceReq) returns (GetMySpaceResp) {
    option (google.api.http) = {
      post: "/page/getMySpace"
      body: "*"
    };
  }

  // 创建页面 || 空间
  // 当getMySpace不存在自己的页面时，调用该接口创建自己的页面
  // 普通用户只能创建一个自己的页面
  // 未来氪金用户可以创建多个
  rpc CreatePage(CreatePageReq) returns (CreatePageResp) {
    option (google.api.http) = {
      post: "/page/createPage"
      body: "*"
    };
  }

  // 更新页面 || 页面
  rpc UpdatePage(UpdatePageReq) returns (UpdatePageResp) {
    option (google.api.http) = {
      post: "/page/updatePage"
      body: "*"
    };
  }

  // 拉取某个页面数据 || 页面
  rpc GetPage(GetPageReq) returns (GetPageResp) {
    option (google.api.http) = {
      post: "/page/getPage"
      body: "*"
    };
  }

  // 把整个页面删除 || 页面
  // 自己的默认页面只能清空，无法删除
  rpc DeletePage(DeletePageReq) returns (DeletePageResp) {
    option (google.api.http) = {
      post: "/page/deletePage"
      body: "*"
    };
  }

  // 调整我的空间下面的页面顺序 || 空间
  // 如果有新增、删除page_id，也使用该方法
  // 保存结果会放到返回的page_ids中，也可以使用耗时多一些的getMySpace方法
  rpc SavePageIds(SavePageIdsReq) returns (SavePageIdsResp) {
    option (google.api.http) = {
      post: "/page/savePageIds"
      body: "*"
    };
  }

  // (暂时废弃)创建临时页面 || 页面
  // 新：临时页面，能否只存在于浏览器本地？
  // 非登录状态可以创建临时页面，默认一个浏览器只能创建一个自己的临时页面
  // 创建完成后得到一个随机页面id(比如 240626-abcd)，不使用lo等字符串，只使用其他字母
  // 生成算法：当前时间转换的4个字母(时分秒)
  rpc CreateTmpPage(CreateTmpPageReq) returns (CreateTmpPageResp) {
    option (google.api.http) = {
      post: "/page/createTmpPage"
      body: "*"
    };
  }

  // 生成新页面链接 || 页面
  rpc CreatePageLink(CreatePageLinkReq) returns (CreatePageLinkResp) {
    option (google.api.http) = {
      post: "/page/createPageLink"
      body: "*"
    };
  }

  // 去除页面的某种链接 || 页面
  // 把页面的只读链接、编辑链接删除
  rpc RemovePageLink(RemovePageLinkReq) returns (RemovePageLinkResp) {
    option (google.api.http) = {
      post: "/page/removePageLink"
      body: "*"
    };
  }

}


message CreateTmpPageReq {
  // 客户侧唯一识别码
  string user_uuid = 1; // binding:"required,min=1,max=32"
}

message CreateTmpPageResp {// omitempty=false
  string page_id = 1;
  int64 create_time = 2;
  int64 update_time = 3;
}

message Page {// omitempty=false
  string page_id = 1;
  string title = 2; // binding:"required,min=0,max=256"
  // 页面描述，放在页面最上方展示
  string brief = 3; // binding:"required,min=0,max=1024"
  // 文件夹
  repeated Collections collections = 4;
  // 版本号，从0递增，当修改时需要传入该值
  int64 version = 5;

  // 其他属性
  int64 create_time = 10;
  int64 update_time = 11;
  // 是否是自己的页面
  bool is_self = 12;

  // 页面属性
  PageConf page_conf = 13;

  // 如果是自己的页面，则会展示一下信息
  string readonly_page_id = 14;
  string edit_page_id = 15;
  string admin_page_id = 16;
}

// 页面简介
message PageBrief {
  string page_id = 1;
  string title = 2;  // binding:"required,min=0,max=256"
  string brief = 3; // binding:"required,min=0,max=1024"
  // 创建时间
  int64 create_time = 4;
  // 更新时间
  int64 update_time = 5;
  // 是否是自己的页面
  bool is_self = 6;
  // 页面配置
  PageConf page_conf = 8;
}


message Collections {// omitempty=false
  // 文件夹中有多个链接
  repeated Link links = 1;
}

message SubLink {
  // 右上角角标
  string corner = 1;
  // 链接
  string url =2;
}

message Link {// omitempty=false
  string title = 1; // binding:"required,min=0,max=256"
  string url = 2;
  repeated string tags = 3;
  // 暂不支持
  string photo_url = 4;

  // 子链接
  repeated SubLink sub_links = 5;
}

message PageConf {
  // 页面类型：只读、可编辑可删除、可编辑不可删除
  // 只读
  bool read_only = 13;
  // 可编辑
  bool can_edit = 14;
  // 可删除
  bool can_delete = 15;
}

message GetPageReq {
  string page_id = 1;
}

message GetPageResp {
  Page page = 1;
}

message GetMySpaceReq {
  // 用户id
  int64 uid = 1;
}

message GetMySpaceResp {
  // 空间名字
  string space_name = 2;

  // 我的空间下面的页面
  // 逻辑：如果没有自己的主页面，则调用接口创建自己的页面
  repeated PageBrief page_briefs = 10;
}

message CreatePageReq {
  // 页面标题
  string title = 1; // binding:"required,min=0,max=256"
  // 页面描述
  string brief = 2; // binding:"required,min=0,max=1024"
  // 页面中的文件夹
  repeated Collections collections = 3;
}

message CreatePageResp {
  string page_id = 1; // 新创建的页面id
  int64 version = 2;
}

message UpdatePageReq {
  string page_id = 1;
  string title = 2; // binding:"required,min=0,max=256"
  string brief = 3;// binding:"required,min=0,max=1024"
  repeated Collections collections = 5;
  // 版本号，从0递增，修改时需要传入该值，当超过最大值后会回退到0
  int64 version = 6;  // binding:"min=0"
  // 配置参数
  // 0x01 title
  // 0x02 brief
  // 0x04 collections
  int64 mask = 7; // binding:"required,min=1,max=7"
}

message UpdatePageResp {
  int64 update_time = 2;
  int64 version = 3;
}

message SavePageIdsReq {
  // 用户id
  int64 uid = 1;
  // 调整后页面id的顺序
  repeated string page_ids = 2; // binding:"dive,required,min=1,max=3"
}

message SavePageIdsResp {
  // 调整后页面id的顺序
  repeated string page_ids = 2;
}

message DeletePageReq {
  string page_id = 1;
}

message DeletePageResp {
}

message RemovePageLinkReq {
  string page_id = 1;
}

message RemovePageLinkResp {
}

message CreatePageLinkReq {
  // 原始页面id
  string page_id = 1; // binding:"required,min=1,max=64"
  // 生成只读、编辑、超级权限的链接
  // 只读、编辑、超级权限的链接，只能生成一个, 如果已经存在，则需要提醒用户，会覆盖之前的链接
  string page_type = 2; // binding:"required,oneof=readonly edit admin"
}

message CreatePageLinkResp { // omitempty=false
  // 只读 http://2049links.com/share_readonly/R加密字符串1
  // 可编辑页面：http://2049links.com/share_editable/E加密字符串2
  // 超级权限页面：http://2049links.com/share_admin/A加密字符串3
  string new_page_id = 1;
  // 页面类型
  string page_type = 2; // binding:"oneof=readonly edit admin"
}