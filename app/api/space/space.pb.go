// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/space.proto

package space

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

type CreateTmpPageReq struct {
	// 客户侧唯一识别码
	UserUuid string `json:"user_uuid" binding:"required,min=1,max=32"`
}

type CreateTmpPageResp struct {
	PageId     string `json:"page_id"`
	CreateTime int64  `json:"create_time"`
	UpdateTime int64  `json:"update_time"`
}

type Page struct {
	PageId string `json:"page_id"`
	Title  string `json:"title"`
	// 页面描述，放在页面最上方展示
	Brief string `json:"brief"`
	// 文件夹
	Collections []*Collections `json:"collections"`
	// 版本号，从0递增，当修改时需要传入该值
	Version int64 `json:"version"`
	// 其他属性
	CreateTime int64 `json:"create_time"`
	UpdateTime int64 `json:"update_time"`
	// 是否是自己的页面
	IsSelf bool `json:"is_self"`
	// 页面属性
	PageConf *PageConf `json:"page_conf"`
	// 如果是自己的页面，则会展示一下信息
	ReadonlyPageId string `json:"readonly_page_id"`
	EditPageId     string `json:"edit_page_id"`
	AdminPageId    string `json:"admin_page_id"`
}

// 页面简介
type PageBrief struct {
	PageId string `json:"page_id,omitempty"`
	Title  string `json:"title,omitempty"`
	Brief  string `json:"brief,omitempty"`
	// 创建时间
	CreateTime int64 `json:"create_time,omitempty"`
	// 更新时间
	UpdateTime int64 `json:"update_time,omitempty"`
	// 是否是自己的页面
	IsSelf bool `json:"is_self,omitempty"`
	// 页面类型
	PageType string `json:"page_type,omitempty"`
	// 页面配置
	PageConf *PageConf `json:"page_conf,omitempty"`
}

type Collections struct {
	// 文件夹中有多个链接
	Links []*Link `json:"links"`
}

type SubLink struct {
	// 右上角角标
	Corner string `json:"corner,omitempty"`
	// 链接
	Url string `json:"url,omitempty"`
}

type Link struct {
	Title string   `json:"title"`
	Url   string   `json:"url"`
	Tags  []string `json:"tags"`
	// 暂不支持
	PhotoUrl string `json:"photo_url"`
	// 子链接
	SubLinks []*SubLink `json:"sub_links"`
}

type PageConf struct {
	// 页面类型：只读、可编辑可删除、可编辑不可删除
	// 只读
	ReadOnly bool `json:"read_only,omitempty"`
	// 可编辑
	CanEdit bool `json:"can_edit,omitempty"`
	// 可删除
	CanDelete bool `json:"can_delete,omitempty"`
}

type GetPageReq struct {
	PageId string `json:"page_id,omitempty"`
}

type GetPageResp struct {
	Page *Page `json:"page,omitempty"`
}

type GetMySpaceReq struct {
	// 用户id
	Uid int64 `json:"uid,omitempty"`
}

type GetMySpaceResp struct {
	// 空间名字
	SpaceName string `json:"space_name,omitempty"`
	// 我的空间下面的页面
	PageBriefs []*PageBrief `json:"page_briefs,omitempty"`
}

type SavePageIdsReq struct {
	// 用户id
	Uid int64 `json:"uid,omitempty"`
	// 调整后页面id的顺序
	PageIds []string `json:"page_ids,omitempty"`
}

type SavePageIdsResp struct {
	// 调整后页面id的顺序
	PageIds []string `json:"page_ids,omitempty"`
}

type UpdatePageReq struct {
	PageId      string         `json:"page_id,omitempty"`
	Title       string         `json:"title,omitempty"`
	Brief       string         `json:"brief,omitempty"`
	Content     string         `json:"content,omitempty"`
	Collections []*Collections `json:"collections,omitempty"`
	// 版本号，从0递增，修改时需要传入该值，当超过最大值后会回退到0
	Version int64 `json:"version,omitempty" binding:"min=0"`
	// 配置参数
	// 0x01 title
	// 0x02 brief
	// 0x04 collections
	Mask int64 `json:"mask,omitempty"`
}

type UpdatePageResp struct {
	UpdateTime int64 `json:"update_time,omitempty"`
}

type DeletePageReq struct {
	PageId string `json:"page_id,omitempty"`
}

type DeletePageResp struct {
}

type RemovePageLinkReq struct {
	PageId string `json:"page_id,omitempty"`
}

type RemovePageLinkResp struct {
}

type CreatePageLinkReq struct {
	// 原始页面id
	PageId string `json:"page_id" binding:"required,min=1,max=64"`
	// 生成只读、编辑、超级权限的链接
	// 只读、编辑、超级权限的链接，只能生成一个, 如果已经存在，则需要提醒用户，会覆盖之前的链接
	PageType string `json:"page_type" binding:"required,oneof=readonly edit admin"`
}

type CreatePageLinkResp struct {
	// 只读 http://2049links.com/share_readonly/R加密字符串1
	// 可编辑页面：http://2049links.com/share_editable/E加密字符串2
	// 超级权限页面：http://2049links.com/share_admin/A加密字符串3
	NewPageId string `json:"new_page_id"`
	// 页面类型
	PageType string `json:"page_type" binding:"oneof=readonly edit admin"`
}
