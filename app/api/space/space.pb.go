// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/space.proto

package space

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

type GetUserInfoReq struct {
	// 用户id
	Uid int64 `json:"uid,omitempty"`
}

type GetUserInfoResp struct {
	// 以下是任何人，都能通过接口调用得到
	// 用户id
	Uid int64 `json:"uid"`
	// 展示名称
	DisplayName string `json:"display_name"`
	// 用户头像
	Avatar string `json:"avatar"`
	// 用户邮箱
	Email string `json:"email"`
	// 以下是登录态，且账号是自己才能获取到
	// 用户名
	Username string `json:"username"`
	// 用户状态 normal 0,suspended 2,deleted 4
	Status int32 `json:"status"`
	// 上一次登录时间
	LastLoginTime int64 `json:"last_login_time"`
	// 是否是管理员 0:普通用户 1:管理员
	IsAdmin int32 `json:"is_admin"`
	// 账号注册来源
	Provider string `json:"provider"`
	// 用户创建时间
	CreateTime int64 `json:"create_time"`
	// 用户更新时间
	UpdateTime int64 `json:"update_time"`
}

type CreateTmpPageReq struct {
	// 客户侧唯一识别码
	UserUuid string `json:"user_uuid" binding:"required,min=1,max=32"`
}

type CreateTmpPageResp struct {
	PageId     string `json:"page_id"`
	CreateTime int64  `json:"create_time"`
	UpdateTime int64  `json:"update_time"`
}

type Page struct {
	PageId string `json:"page_id"`
	Title  string `json:"title" binding:"required,min=0,max=256"`
	// 页面描述，放在页面最上方展示
	Brief string `json:"brief" binding:"required,min=0,max=1024"`
	// 有一堆文件夹
	Collections []*Collections `json:"collections"`
	// 版本号，从0递增，当修改时需要传入该值
	Version int64 `json:"version"`
	// 其他属性
	CreateTime int64 `json:"create_time"`
	UpdateTime int64 `json:"update_time"`
	// 是否是自己的页面
	IsSelf bool `json:"is_self"`
	// 页面属性
	PageConf *PageConf `json:"page_conf"`
	// 如果是自己的页面，则会展示一下信息
	ReadonlyPageId string `json:"readonly_page_id"`
	EditPageId     string `json:"edit_page_id"`
	AdminPageId    string `json:"admin_page_id"`
}

// 页面简介
type PageBrief struct {
	PageId string `json:"page_id"`
	Title  string `json:"title" binding:"required,min=0,max=256"`
	Brief  string `json:"brief" binding:"required,min=0,max=1024"`
	// 创建时间
	CreateTime int64 `json:"create_time"`
	// 更新时间
	UpdateTime int64 `json:"update_time"`
	// 是否是自己的页面
	IsSelf bool `json:"is_self"`
	// 页面配置
	PageConf *PageConf `json:"page_conf"`
}

type Collections struct {
	// 每个文件夹里，有多个链接
	Links []*Link `json:"links"`
}

type SubLink struct {
	// 展示的文字
	SubTitle string `json:"sub_title,omitempty"`
	// 链接
	SubUrl string `json:"sub_url,omitempty"`
}

type Link struct {
	// 链接的展示的标题
	Title string `json:"title" binding:"required,min=0,max=256"`
	// 链接的地址
	Url string `json:"url"`
	// 链接的标签
	Tags []string `json:"tags"`
	// 链接的图标地址(暂不支持)
	PhotoUrl string `json:"photo_url"`
	// 子链接
	SubLinks []*SubLink `json:"sub_links"`
}

type PageConf struct {
	// 页面类型：只读、可编辑可删除、可编辑不可删除
	// 只读
	ReadOnly bool `json:"read_only"`
	// 可编辑
	CanEdit bool `json:"can_edit"`
	// 可删除
	CanDelete bool `json:"can_delete"`
}

type GetPageReq struct {
	PageId string `json:"page_id,omitempty"`
}

type GetPageResp struct {
	Page *Page `json:"page"`
}

type GetMySpaceReq struct {
}

type GetMySpaceResp struct {
	// 空间名字
	SpaceName string `json:"space_name"`
	// 我的空间下面的页面
	// 逻辑：如果没有自己的主页面，则调用接口创建自己的页面
	PageBriefs []*PageBrief `json:"page_briefs"`
}

type CreatePageReq struct {
	// 页面标题
	Title string `json:"title" binding:"required,min=0,max=256"`
	// 页面描述
	Brief string `json:"brief,omitempty" binding:"min=0,max=1024"`
	// 页面中的文件夹
	Collections []*Collections `json:"collections,omitempty"`
}

type CreatePageResp struct {
	PageId  string   `json:"page_id"` // 新创建的页面id
	Version int64    `json:"version"`
	PageIds []string `json:"page_ids"` // 新创建的页面id列表
}

type UpdatePageReq struct {
	PageId      string         `json:"page_id,omitempty"`
	Title       string         `json:"title" binding:"required,min=0,max=256"`
	Brief       string         `json:"brief" binding:"required,min=0,max=1024"`
	Collections []*Collections `json:"collections,omitempty"`
	// 版本号，从0递增，修改时需要传入该值，当超过最大值后会回退到0
	Version int64 `json:"version,omitempty" binding:"min=0"`
	// 配置参数
	// 0x01 title
	// 0x02 brief
	// 0x04 collections
	Mask int64 `json:"mask" binding:"required,min=1,max=7"`
}

type UpdatePageResp struct {
	UpdateTime int64 `json:"update_time"`
	Version    int64 `json:"version"`
}

type SavePageIdsReq struct {
	// 调整后页面id的顺序
	PageIds []string `json:"page_ids" binding:"required,min=1,max=3"`
}

type SavePageIdsResp struct {
	// 调整后页面id的顺序
	PageIds []string `json:"page_ids"`
}

type DeletePageReq struct {
	PageId string `json:"page_id,omitempty"`
}

type DeletePageResp struct {
}

type RemovePageLinkReq struct {
	PageId string `json:"page_id,omitempty"`
}

type RemovePageLinkResp struct {
}

type AddPageLinkReq struct {
	// 原始页面id
	PageId string `json:"page_id" binding:"required,min=1,max=64"`
	// 生成只读、编辑、超级权限的链接
	// 只读、编辑、超级权限的链接，只能生成一个, 如果已经存在，则需要提醒用户，会覆盖之前的链接
	PageType string `json:"page_type" binding:"required,oneof=readonly edit admin"`
}

type AddPageLinkResp struct {
	// 只读：http://2049links.com/share_readonly/R加密字符串1
	// 可编辑页面：http://2049links.com/share_editable/E加密字符串2
	// 超级权限页面：http://2049links.com/share_admin/A加密字符串3
	NewPageId string `json:"new_page_id"`
	// 页面类型
	PageType string `json:"page_type" binding:"oneof=readonly edit admin"`
}
