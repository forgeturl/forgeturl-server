// Code generated by protoc-gen-go-gin. DO NOT EDIT.
// versions:
// - protoc-gen-go-gin v1.0.3
// - protoc            v4.24.2
// source: api/proto/dumplinks.proto

package dumplinks

import (
	context "context"
	calloption "github.com/guoming0000/protoc-gen-go-gin/calloption"
	ecode "github.com/sunmi-OS/gocore/v2/api/ecode"
	http_request "github.com/sunmi-OS/gocore/v2/utils/http-request"
)

// DumplinksServiceHTTPClient is the client API for DumplinksService service.
type DumplinksServiceHTTPClient interface {
	ImportBookmarks(context.Context, *ImportBookmarksReq, ...calloption.CallOption) (*TResponse[ImportBookmarksResp], error)
	ExportBookmarks(context.Context, *ExportBookmarksReq, ...calloption.CallOption) (*TResponse[ExportBookmarksResp], error)
}

type DumplinksServiceHTTPClientImpl struct {
	hh *http_request.HttpClient
}

func NewDumplinksServiceHTTPClient(hh *http_request.HttpClient) DumplinksServiceHTTPClient {
	return &DumplinksServiceHTTPClientImpl{hh: hh}
}

func (c *DumplinksServiceHTTPClientImpl) ImportBookmarks(ctx context.Context, req *ImportBookmarksReq, opts ...calloption.CallOption) (*TResponse[ImportBookmarksResp], error) {
	resp := &TResponse[ImportBookmarksResp]{}
	r := c.hh.Client.R().SetContext(ctx)
	for _, opt := range opts {
		opt(r)
	}
	_, err := r.SetBody(req).SetResult(resp).Post("/dumplinks/importBookmarks")
	if err != nil {
		return nil, err
	}
	if resp.Code != 1 {
		err = ecode.NewV2(int(resp.Code), resp.Msg)
	}
	return resp, err
}

func (c *DumplinksServiceHTTPClientImpl) ExportBookmarks(ctx context.Context, req *ExportBookmarksReq, opts ...calloption.CallOption) (*TResponse[ExportBookmarksResp], error) {
	resp := &TResponse[ExportBookmarksResp]{}
	r := c.hh.Client.R().SetContext(ctx)
	for _, opt := range opts {
		opt(r)
	}
	_, err := r.SetBody(req).SetResult(resp).Post("/dumplinks/exportBookmarks")
	if err != nil {
		return nil, err
	}
	if resp.Code != 1 {
		err = ecode.NewV2(int(resp.Code), resp.Msg)
	}
	return resp, err
}
